---
layout: post
title:  "code review的反思"
date:   2016-09-10 14:30:59
author: zhanggeng
categories: 小心思
---


今天是教师节！祝所有恩师，节日快乐！上学时，总是说，这个老师不好，那个老师不好，现在再仔细回想一下，所有的老师在我成长的道路上给予我助力，想想很感激！

下午拜读了两篇文章很受启发：

1. [陈老师｜我的“code review”成长之路](http://mp.weixin.qq.com/s?__biz=MjM5ODIzNDQ3Mw==&mid=2649966104&idx=1&sn=2e9a184beb676cb8687c0bed024fdd62&scene=21#wechat_redirect)
2. [也谈代码审查之道（路）](http://mp.weixin.qq.com/s?__biz=MjM5ODIzNDQ3Mw==&mid=2649966109&idx=1&sn=c4ca3f0a3e29eddf2037688d2a09ba16&scene=2&srcid=0910x9YNWOo2U2NAOnRI92Ip&from=timeline&isappinstalled=0#wechat_redirect)

有一点感触，因此想写下来，其实主要是我对自己的反思：


# 从没有看多队友的代码

来这个项目组已经一年多了，我从来都是只关注自己的那部分任务，自己的代码写完就了事儿，从来没有关心过搭档的任务完成情况，这是我感觉自己做的最不好的地方。以至于，有时候，测试提出搭档那部分任务的bug后，我都得面对一份陌生的代码。 

每次迭代都是自己领自己的任务，完成自己的任务后commit，提交测试。有时候搭档有事儿，请假没来，我都要从新来阅读代码，这样很费时间，这样做很不好，我并没有尽到一个队友应有的责任。

*我需要改进的地方*

以后，在我完成自己任务的后在review自己代码的同时也要review搭档的代码，这样可以让我熟悉其他的任务，从而保证整个项目有两个或以上的人熟悉，能让团队成员互为备份，互相支持，不会让自己成为项目中孤立的一部分SPOF。

同时要思考一些问题：对于搭档的任务，如果是由我来实现，我该怎么做？通过review搭档的代码，可以比较两种实现思路的优缺点，学习他优秀的地方，在提高自己的同时，还能保证自己对整个项目的任务都了然于胸。





